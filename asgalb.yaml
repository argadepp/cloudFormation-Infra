---
Description: Stack of Asg and Launch Template
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  VPC:
    Description: VPC Details
    Type: AWS::EC2::VPC::Id 
  AmiId:
    Description: Region specific image from the Parameter Store
    Type: String
    Default: 'ami-024c319d5d14b463e'
  InstanceType:
    Description: Amazon EC2 instance type for the instances
    Type: String
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
    Default: t3.micro
  Subnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: A list of subnets for the Auto Scaling group
  DNS:
    Type: String
    Description: Pass the DNS name    
  Alias:
    Type: String
    Description: Pass the alias for the LB

Resources:
  EC2SecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: 'SSH and Port 80'
            VpcId:
              Ref: VPC
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 22
                  ToPort: 22
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  SourceSecurityGroupId:
                      Ref: ELBSecurityGroup
 
  ELBSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: 'SSH and Port 80'
            VpcId:
              Ref: VPC
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
  myLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: !Sub ${AWS::StackName}-launch-template
      LaunchTemplateData:
        ImageId: !Ref AmiId
        InstanceType: !Ref InstanceType
        SecurityGroupIds:
          - !Ref EC2SecurityGroup 
        UserData:
          Fn::Base64:
            !Sub |
              #!/bin/bash
              set -o xtrace
              sudo apt update 
              sudo apt install apache2 -y

  myASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref myLaunchTemplate
        Version: !GetAtt myLaunchTemplate.LatestVersionNumber
      MaxSize: '1'
      MinSize: '1'
      DesiredCapacity: '1'
      VPCZoneIdentifier: !Ref Subnets
      TargetGroupARNs:
        - !Ref EC2TargetGroup

  EC2TargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        HealthCheckIntervalSeconds: 30
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 15
        HealthyThresholdCount: 5
        TargetType: instance
        Matcher:
          HttpCode: '200'
        Name: EC2TargetGroup
        Port: 80
        Protocol: HTTP
        TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '2'
        UnhealthyThresholdCount: 3
        VpcId:
          ! Ref: VPC
        Tags:
        - Key: Name
          Value: EC2TargetGroup
        - Key: Port
          Value: 80
  ALBListener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        DefaultActions:
          - Type: forward
            TargetGroupArn:
              Ref: EC2TargetGroup
        LoadBalancerArn:
            Ref: ApplicationLoadBalancer
        Port: 80
        Protocol: HTTP
  ApplicationLoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        Scheme: internet-facing # or internal
        Subnets: !Ref Subnets
        SecurityGroups:
        - Ref: ELBSecurityGroup  
  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: demozone.in
      VPCs:
        - VPCId: !Ref VPC
          VPCRegion: !Ref 'AWS::Region'      
  LoadBalancerAlias:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt ApplicationLoadBalancer.DNSName
        HostedZoneId: !GetAtt ApplicationLoadBalancer.CanonicalHostedZoneID
      HostedZoneId: !Ref HostedZone
      Name: !Join ['.',!Ref Alias , !Ref DNS  ]
      Type: A
Outputs: 
  myASG:
    Value: !Ref myASG       
